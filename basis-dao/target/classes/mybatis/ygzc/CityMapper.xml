<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ygzc.dao.mapper.ygzc.CityMapper">
  <resultMap id="BaseResultMap" type="com.ygzc.dao.model.ygzc.City">
    <result column="city_id" jdbcType="INTEGER" property="cityId" />
    <result column="key" jdbcType="VARCHAR" property="key" />
    <result column="city_name" jdbcType="VARCHAR" property="cityName" />
    <result column="zip_code" jdbcType="VARCHAR" property="zipCode" />
    <result column="province_id" jdbcType="INTEGER" property="provinceId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    city_id, key, city_name, zip_code, province_id
  </sql>
  <select id="selectByExample" parameterType="com.ygzc.dao.model.ygzc.CityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from city
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ygzc.dao.model.ygzc.CityExample">
    delete from city
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ygzc.dao.model.ygzc.City">
    insert into city (city_id, key, city_name, 
      zip_code, province_id)
    values (#{cityId,jdbcType=INTEGER}, #{key,jdbcType=VARCHAR}, #{cityName,jdbcType=VARCHAR}, 
      #{zipCode,jdbcType=VARCHAR}, #{provinceId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ygzc.dao.model.ygzc.City">
    insert into city
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cityId != null">
        city_id,
      </if>
      <if test="key != null">
        key,
      </if>
      <if test="cityName != null">
        city_name,
      </if>
      <if test="zipCode != null">
        zip_code,
      </if>
      <if test="provinceId != null">
        province_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cityId != null">
        #{cityId,jdbcType=INTEGER},
      </if>
      <if test="key != null">
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="cityName != null">
        #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null">
        #{provinceId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ygzc.dao.model.ygzc.CityExample" resultType="java.lang.Long">
    select count(*) from city
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update city
    <set>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=INTEGER},
      </if>
      <if test="record.key != null">
        key = #{record.key,jdbcType=VARCHAR},
      </if>
      <if test="record.cityName != null">
        city_name = #{record.cityName,jdbcType=VARCHAR},
      </if>
      <if test="record.zipCode != null">
        zip_code = #{record.zipCode,jdbcType=VARCHAR},
      </if>
      <if test="record.provinceId != null">
        province_id = #{record.provinceId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update city
    set city_id = #{record.cityId,jdbcType=INTEGER},
      key = #{record.key,jdbcType=VARCHAR},
      city_name = #{record.cityName,jdbcType=VARCHAR},
      zip_code = #{record.zipCode,jdbcType=VARCHAR},
      province_id = #{record.provinceId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>