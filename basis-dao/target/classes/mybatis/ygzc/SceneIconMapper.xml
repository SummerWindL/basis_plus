<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ygzc.dao.mapper.ygzc.SceneIconMapper">
  <resultMap id="BaseResultMap" type="com.ygzc.dao.model.ygzc.SceneIcon">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="scene_name" jdbcType="VARCHAR" property="sceneName" />
    <result column="picture_name" jdbcType="VARCHAR" property="pictureName" />
    <result column="url1" jdbcType="VARCHAR" property="url1" />
    <result column="url2" jdbcType="VARCHAR" property="url2" />
    <result column="height" jdbcType="INTEGER" property="height" />
    <result column="width" jdbcType="INTEGER" property="width" />
    <result column="ext" jdbcType="INTEGER" property="ext" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, scene_name, picture_name, url1, url2, height, width, ext, created, state
  </sql>
  <select id="selectByExample" parameterType="com.ygzc.dao.model.ygzc.SceneIconExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from scene_icon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from scene_icon
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from scene_icon
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ygzc.dao.model.ygzc.SceneIconExample">
    delete from scene_icon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ygzc.dao.model.ygzc.SceneIcon">
    insert into scene_icon (id, scene_name, picture_name, 
      url1, url2, height, 
      width, ext, created, 
      state)
    values (#{id,jdbcType=INTEGER}, #{sceneName,jdbcType=VARCHAR}, #{pictureName,jdbcType=VARCHAR}, 
      #{url1,jdbcType=VARCHAR}, #{url2,jdbcType=VARCHAR}, #{height,jdbcType=INTEGER}, 
      #{width,jdbcType=INTEGER}, #{ext,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ygzc.dao.model.ygzc.SceneIcon">
    insert into scene_icon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sceneName != null">
        scene_name,
      </if>
      <if test="pictureName != null">
        picture_name,
      </if>
      <if test="url1 != null">
        url1,
      </if>
      <if test="url2 != null">
        url2,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="width != null">
        width,
      </if>
      <if test="ext != null">
        ext,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sceneName != null">
        #{sceneName,jdbcType=VARCHAR},
      </if>
      <if test="pictureName != null">
        #{pictureName,jdbcType=VARCHAR},
      </if>
      <if test="url1 != null">
        #{url1,jdbcType=VARCHAR},
      </if>
      <if test="url2 != null">
        #{url2,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        #{height,jdbcType=INTEGER},
      </if>
      <if test="width != null">
        #{width,jdbcType=INTEGER},
      </if>
      <if test="ext != null">
        #{ext,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ygzc.dao.model.ygzc.SceneIconExample" resultType="java.lang.Long">
    select count(*) from scene_icon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update scene_icon
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sceneName != null">
        scene_name = #{record.sceneName,jdbcType=VARCHAR},
      </if>
      <if test="record.pictureName != null">
        picture_name = #{record.pictureName,jdbcType=VARCHAR},
      </if>
      <if test="record.url1 != null">
        url1 = #{record.url1,jdbcType=VARCHAR},
      </if>
      <if test="record.url2 != null">
        url2 = #{record.url2,jdbcType=VARCHAR},
      </if>
      <if test="record.height != null">
        height = #{record.height,jdbcType=INTEGER},
      </if>
      <if test="record.width != null">
        width = #{record.width,jdbcType=INTEGER},
      </if>
      <if test="record.ext != null">
        ext = #{record.ext,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update scene_icon
    set id = #{record.id,jdbcType=INTEGER},
      scene_name = #{record.sceneName,jdbcType=VARCHAR},
      picture_name = #{record.pictureName,jdbcType=VARCHAR},
      url1 = #{record.url1,jdbcType=VARCHAR},
      url2 = #{record.url2,jdbcType=VARCHAR},
      height = #{record.height,jdbcType=INTEGER},
      width = #{record.width,jdbcType=INTEGER},
      ext = #{record.ext,jdbcType=INTEGER},
      created = #{record.created,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ygzc.dao.model.ygzc.SceneIcon">
    update scene_icon
    <set>
      <if test="sceneName != null">
        scene_name = #{sceneName,jdbcType=VARCHAR},
      </if>
      <if test="pictureName != null">
        picture_name = #{pictureName,jdbcType=VARCHAR},
      </if>
      <if test="url1 != null">
        url1 = #{url1,jdbcType=VARCHAR},
      </if>
      <if test="url2 != null">
        url2 = #{url2,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=INTEGER},
      </if>
      <if test="width != null">
        width = #{width,jdbcType=INTEGER},
      </if>
      <if test="ext != null">
        ext = #{ext,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ygzc.dao.model.ygzc.SceneIcon">
    update scene_icon
    set scene_name = #{sceneName,jdbcType=VARCHAR},
      picture_name = #{pictureName,jdbcType=VARCHAR},
      url1 = #{url1,jdbcType=VARCHAR},
      url2 = #{url2,jdbcType=VARCHAR},
      height = #{height,jdbcType=INTEGER},
      width = #{width,jdbcType=INTEGER},
      ext = #{ext,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>