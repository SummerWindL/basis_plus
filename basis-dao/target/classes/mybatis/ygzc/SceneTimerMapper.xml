<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ygzc.dao.mapper.ygzc.SceneTimerMapper">
  <resultMap id="BaseResultMap" type="com.ygzc.dao.model.ygzc.SceneTimer">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="category" jdbcType="INTEGER" property="category" />
    <result column="bind_application" jdbcType="VARCHAR" property="bindApplication" />
    <result column="bind_application_scene" jdbcType="VARCHAR" property="bindApplicationScene" />
    <result column="bind_scene_terminal" jdbcType="VARCHAR" property="bindSceneTerminal" />
    <result column="time_name" jdbcType="VARCHAR" property="timeName" />
    <result column="repeat" jdbcType="INTEGER" property="repeat" />
    <result column="is_run" jdbcType="INTEGER" property="isRun" />
    <result column="execution_time" jdbcType="VARCHAR" property="executionTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_date" jdbcType="TIME" property="createDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, category, bind_application, bind_application_scene, bind_scene_terminal, time_name, 
    repeat, is_run, execution_time, state, create_user, create_date
  </sql>
  <select id="selectByExample" parameterType="com.ygzc.dao.model.ygzc.SceneTimerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from scene_timer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from scene_timer
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from scene_timer
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ygzc.dao.model.ygzc.SceneTimerExample">
    delete from scene_timer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ygzc.dao.model.ygzc.SceneTimer">
    insert into scene_timer (id, category, bind_application, 
      bind_application_scene, bind_scene_terminal, 
      time_name, repeat, is_run, 
      execution_time, state, create_user, 
      create_date)
    values (#{id,jdbcType=VARCHAR}, #{category,jdbcType=INTEGER}, #{bindApplication,jdbcType=VARCHAR}, 
      #{bindApplicationScene,jdbcType=VARCHAR}, #{bindSceneTerminal,jdbcType=VARCHAR}, 
      #{timeName,jdbcType=VARCHAR}, #{repeat,jdbcType=INTEGER}, #{isRun,jdbcType=INTEGER}, 
      #{executionTime,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIME})
  </insert>
  <insert id="insertSelective" parameterType="com.ygzc.dao.model.ygzc.SceneTimer">
    insert into scene_timer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="bindApplication != null">
        bind_application,
      </if>
      <if test="bindApplicationScene != null">
        bind_application_scene,
      </if>
      <if test="bindSceneTerminal != null">
        bind_scene_terminal,
      </if>
      <if test="timeName != null">
        time_name,
      </if>
      <if test="repeat != null">
        repeat,
      </if>
      <if test="isRun != null">
        is_run,
      </if>
      <if test="executionTime != null">
        execution_time,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=INTEGER},
      </if>
      <if test="bindApplication != null">
        #{bindApplication,jdbcType=VARCHAR},
      </if>
      <if test="bindApplicationScene != null">
        #{bindApplicationScene,jdbcType=VARCHAR},
      </if>
      <if test="bindSceneTerminal != null">
        #{bindSceneTerminal,jdbcType=VARCHAR},
      </if>
      <if test="timeName != null">
        #{timeName,jdbcType=VARCHAR},
      </if>
      <if test="repeat != null">
        #{repeat,jdbcType=INTEGER},
      </if>
      <if test="isRun != null">
        #{isRun,jdbcType=INTEGER},
      </if>
      <if test="executionTime != null">
        #{executionTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIME},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ygzc.dao.model.ygzc.SceneTimerExample" resultType="java.lang.Long">
    select count(*) from scene_timer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update scene_timer
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=INTEGER},
      </if>
      <if test="record.bindApplication != null">
        bind_application = #{record.bindApplication,jdbcType=VARCHAR},
      </if>
      <if test="record.bindApplicationScene != null">
        bind_application_scene = #{record.bindApplicationScene,jdbcType=VARCHAR},
      </if>
      <if test="record.bindSceneTerminal != null">
        bind_scene_terminal = #{record.bindSceneTerminal,jdbcType=VARCHAR},
      </if>
      <if test="record.timeName != null">
        time_name = #{record.timeName,jdbcType=VARCHAR},
      </if>
      <if test="record.repeat != null">
        repeat = #{record.repeat,jdbcType=INTEGER},
      </if>
      <if test="record.isRun != null">
        is_run = #{record.isRun,jdbcType=INTEGER},
      </if>
      <if test="record.executionTime != null">
        execution_time = #{record.executionTime,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIME},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update scene_timer
    set id = #{record.id,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=INTEGER},
      bind_application = #{record.bindApplication,jdbcType=VARCHAR},
      bind_application_scene = #{record.bindApplicationScene,jdbcType=VARCHAR},
      bind_scene_terminal = #{record.bindSceneTerminal,jdbcType=VARCHAR},
      time_name = #{record.timeName,jdbcType=VARCHAR},
      repeat = #{record.repeat,jdbcType=INTEGER},
      is_run = #{record.isRun,jdbcType=INTEGER},
      execution_time = #{record.executionTime,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIME}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ygzc.dao.model.ygzc.SceneTimer">
    update scene_timer
    <set>
      <if test="category != null">
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="bindApplication != null">
        bind_application = #{bindApplication,jdbcType=VARCHAR},
      </if>
      <if test="bindApplicationScene != null">
        bind_application_scene = #{bindApplicationScene,jdbcType=VARCHAR},
      </if>
      <if test="bindSceneTerminal != null">
        bind_scene_terminal = #{bindSceneTerminal,jdbcType=VARCHAR},
      </if>
      <if test="timeName != null">
        time_name = #{timeName,jdbcType=VARCHAR},
      </if>
      <if test="repeat != null">
        repeat = #{repeat,jdbcType=INTEGER},
      </if>
      <if test="isRun != null">
        is_run = #{isRun,jdbcType=INTEGER},
      </if>
      <if test="executionTime != null">
        execution_time = #{executionTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIME},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ygzc.dao.model.ygzc.SceneTimer">
    update scene_timer
    set category = #{category,jdbcType=INTEGER},
      bind_application = #{bindApplication,jdbcType=VARCHAR},
      bind_application_scene = #{bindApplicationScene,jdbcType=VARCHAR},
      bind_scene_terminal = #{bindSceneTerminal,jdbcType=VARCHAR},
      time_name = #{timeName,jdbcType=VARCHAR},
      repeat = #{repeat,jdbcType=INTEGER},
      is_run = #{isRun,jdbcType=INTEGER},
      execution_time = #{executionTime,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIME}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>